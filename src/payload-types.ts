/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    colors: Color;
    gradients: Gradient;
    media: Media;
    socials: Social;
    redirects: Redirect;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    colors: ColorsSelect<false> | ColorsSelect<true>;
    gradients: GradientsSelect<false> | GradientsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    socials: SocialsSelect<false> | SocialsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    homepage: Homepage;
    footer: Footer;
    'site-settings': SiteSetting;
    theme: Theme;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    homepage: HomepageSelect<false> | HomepageSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    'site-settings': SiteSettingsSelect<false> | SiteSettingsSelect<true>;
    theme: ThemeSelect<false> | ThemeSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  roles?: ('admin' | 'editor' | 'user')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "colors".
 */
export interface Color {
  id: number;
  /**
   * Color name
   */
  name: string;
  /**
   * Color value
   */
  color: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gradients".
 */
export interface Gradient {
  id: number;
  name: string;
  angle?: number | null;
  colors: {
    color: number | Color;
    position: number;
    /**
     * Transparency value (0-100). Defaults to 100 (fully opaque).
     */
    transparency?: number | null;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  /**
   * Simple text description of the image.
   */
  alt: string;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "socials".
 */
export interface Social {
  id: number;
  /**
   * This name will be used for the tooltip
   */
  name: string;
  url: string;
  appearance: {
    icon: string;
    color: string;
  };
  /**
   * Where this social media link is used
   */
  assignedTo?: string[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Disclaimer: Redirects are not automatically updated upon deployment. They require a full rebuild to take effect.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * A name for this redirect. This is only used for the redirects menu and your reference.
   */
  name: string;
  /**
   * The path you want to redirect from. Must start with a "/"
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'redirects';
      value: number | Redirect;
    } | null;
    /**
     * The url to redirect to
     */
    url?: string | null;
  };
  /**
   * If you don't know what this means, do not change this
   */
  type: '301' | '302';
  /**
   * Hide this redirect from the public facing redirects list. The redirect will still work.
   */
  hidden?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'colors';
        value: number | Color;
      } | null)
    | ({
        relationTo: 'gradients';
        value: number | Gradient;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'socials';
        value: number | Social;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "colors_select".
 */
export interface ColorsSelect<T extends boolean = true> {
  name?: T;
  color?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gradients_select".
 */
export interface GradientsSelect<T extends boolean = true> {
  name?: T;
  angle?: T;
  colors?:
    | T
    | {
        color?: T;
        position?: T;
        transparency?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "socials_select".
 */
export interface SocialsSelect<T extends boolean = true> {
  name?: T;
  url?: T;
  appearance?:
    | T
    | {
        icon?: T;
        color?: T;
      };
  assignedTo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  name?: T;
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  type?: T;
  hidden?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  announcement?: {
    /**
     * Try to keep the announcement text as concise as possible. Longer text is allowed, but may not look good on smaller screens.
     */
    text?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    /**
     * The color of the announcement bar. Defaults to the link theme color.
     */
    color?: (number | null) | Color;
    /**
     * Overrides the link color in the announcement text. Defaults to the link theme color.
     */
    linkColorOverride?: (number | null) | Color;
  };
  logo: number | Media;
  /**
   * Social media icons that will be displayed in the header.
   */
  socials?: (number | Social)[] | null;
  behaviorSettings: {
    /**
     * Sticky: Moves with the page. Static: Never moves.
     */
    mode: 'sticky' | 'static';
    background: {
      type: 'none' | 'solid' | 'gradient';
      /**
       * Choose a background color for the header.
       */
      color?: (number | null) | Color;
      /**
       * Choose a gradient for the header background.
       */
      gradient?: (number | null) | Gradient;
      /**
       * If enabled, start with a transparent background and fade in as the user scrolls.
       */
      fadeIn?: boolean | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: number;
  supportButtons?:
    | {
        label: string;
        tooltip?: string | null;
        icon: string;
        url: string;
        variant?: ('contained' | 'outlined' | 'text') | null;
        color?: ('primary' | 'secondary' | 'inherit') | null;
        fullWidth?: boolean | null;
        id?: string | null;
      }[]
    | null;
  communityButtons?:
    | {
        label: string;
        tooltip?: string | null;
        icon: string;
        url: string;
        variant?: ('contained' | 'outlined' | 'text') | null;
        color?: ('primary' | 'secondary' | 'inherit') | null;
        fullWidth?: boolean | null;
        id?: string | null;
      }[]
    | null;
  aboutSections?:
    | {
        title: string;
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        imagePosition?: ('left' | 'right') | null;
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  /**
   * Social media icons that will be displayed in the footer.
   */
  socials?: (number | Social)[] | null;
  /**
   * Secondary set of social media icons that will be displayed as a seperate group in the footer.
   */
  socialsSecondary?: (number | Social)[] | null;
  contact?: string | null;
  behaviorSettings: {
    background: {
      type: 'none' | 'solid' | 'gradient';
      /**
       * Choose a background color for the footer.
       */
      color?: (number | null) | Color;
      /**
       * Choose a gradient for the footer background.
       */
      gradient?: (number | null) | Gradient;
    };
  };
  /**
   * This will be displayed in the footer. Read-only.
   */
  devHandle?: {
    enabled?: boolean | null;
    devHandle?: string | null;
    /**
     * Any link that the dev handle should point to.
     */
    devHandleLink?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings".
 */
export interface SiteSetting {
  id: number;
  twitchPlayer: {
    /**
     * The name of the Twitch channel to display in the player.
     */
    channelName: string;
    /**
     * Image to display under "Schedule" when the Twitch channel is offline.
     */
    scheduleImage: number | Media;
    /**
     * Image to display under "While You Wait" when the Twitch channel is offline. Meant for anything & everything.
     */
    extraImage: number | Media;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "theme".
 */
export interface Theme {
  id: number;
  colors: {
    primary: number | Color;
    secondary: number | Color;
    links: number | Color;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  announcement?:
    | T
    | {
        text?: T;
        color?: T;
        linkColorOverride?: T;
      };
  logo?: T;
  socials?: T;
  behaviorSettings?:
    | T
    | {
        mode?: T;
        background?:
          | T
          | {
              type?: T;
              color?: T;
              gradient?: T;
              fadeIn?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  supportButtons?:
    | T
    | {
        label?: T;
        tooltip?: T;
        icon?: T;
        url?: T;
        variant?: T;
        color?: T;
        fullWidth?: T;
        id?: T;
      };
  communityButtons?:
    | T
    | {
        label?: T;
        tooltip?: T;
        icon?: T;
        url?: T;
        variant?: T;
        color?: T;
        fullWidth?: T;
        id?: T;
      };
  aboutSections?:
    | T
    | {
        title?: T;
        content?: T;
        imagePosition?: T;
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  socials?: T;
  socialsSecondary?: T;
  contact?: T;
  behaviorSettings?:
    | T
    | {
        background?:
          | T
          | {
              type?: T;
              color?: T;
              gradient?: T;
            };
      };
  devHandle?:
    | T
    | {
        enabled?: T;
        devHandle?: T;
        devHandleLink?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  twitchPlayer?:
    | T
    | {
        channelName?: T;
        scheduleImage?: T;
        extraImage?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "theme_select".
 */
export interface ThemeSelect<T extends boolean = true> {
  colors?:
    | T
    | {
        primary?: T;
        secondary?: T;
        links?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}